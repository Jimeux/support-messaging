AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template illustrates how to use AWS CodeBuild and AWS CodePipeline to
  achieve continuous deployment of source code from a GitHub repository via a
  Docker container to an Amazon EC2 Container Service cluster.

Parameters:
  GitHubUser:
    Type: String
    Description: Your username on GitHub.
  GitHubRepo:
    Type: String
    Default: ecs-demo-php-simple-app
    Description: The repo name of the sample service.
  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.
  GitHubToken:
    Type: String
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)

# Metadata:
#   AWS::CloudFormation::Interface:
#     ParameterLabels:
#       GitHubUser:
#         default: "User"
#       GitHubRepo:
#         default: "Repo"
#       GitHubBranch:
#         default: "Branch"
#       GitHubToken:
#         default: "Personal Access Token"
#     ParameterGroups:
#       - Label:
#           default: GitHub Configuration
#         Parameters:
#           - GitHubRepo
#           - GitHubBranch
#           - GitHubUser
#           - GitHubToken


Resources:

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/vpc.yml
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        SubnetACIDR: 10.215.10.0/24
        SubnetBCIDR: 10.215.20.0/24

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/load-balancer.yml
      Parameters:
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/ecs-cluster.yml
      Parameters:
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/service.yml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        Tag:

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/deployment-pipeline.yml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        Repository: !GetAtt Service.Outputs.Repository


Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
