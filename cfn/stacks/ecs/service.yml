---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Cluster:
    Type: String
  DesiredCount:
    Type: Number
    Default: 1
  LoadBalancer:
    Type: String
  LoadBalancerListener:
    Type: String
  SourceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  VpcId:
    Type: String
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  Repository:
    Type: String
  ContainerPort:
    Type: Number
    Default: 8080
  Name:
    Type: String
  ExportName:
    Type: String
  PathPattern:
    Type: String
  HealthCheckPath:
    Type: String
  ClientDomain:
    Type: String


Resources:

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: !Sub EcsTaskExecutionRole-${AWS::StackName}-TaskExec
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/support-*

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SupportService ContainerSecurityGroup
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          SourceSecurityGroupId: !Ref SourceSecurityGroup

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}/${Name}

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-${Name}
      RequiresCompatibilities:
        - FARGATE
      Memory: 512
      Cpu: 256
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: !Ref Name
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Essential: true
          Memory: 256
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Environment:
            - Name: SUPPORT_SERVER_PORT
              Value: !Ref ContainerPort
            - Name: SUPPORT_CLIENT_DOMAIN
              Value: !Ref ClientDomain
            - Name: SUPPORT_DB_USER
              Value: dbuser
            - Name: SUPPORT_DB_HOST
              Value: !ImportValue SupportDBInstanceEndpoint
            - Name: SUPPORT_DB_PORT
              Value: 3306
            - Name: SUPPORT_DB_NAME
              Value: support
          Secrets:
            - Name: SUPPORT_DB_PASSWORD
              ValueFrom: support-master-user-password
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName

  FargateService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ContainerSecurityGroup
          Subnets: !Ref Subnets
      LoadBalancers:
        - ContainerName: !Ref Name
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ServiceTargetGroup

  ServiceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Port: 8080
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  ServiceListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 10
      Conditions:
        - Field: path-pattern
          Values:
            - !Ref PathPattern
      Actions:
        - TargetGroupArn: !Ref ServiceTargetGroup
          Type: forward

Outputs:
  Repository:
    Value: !Ref Repository
  Service:
    Value: !Ref FargateService
    Export:
      Name: !Ref ExportName
